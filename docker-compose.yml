version: '4'

services:

  db:
    image: postgres:16

    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=de_projects
    ports:
      - '5432:5432'
      - '5433:5433'
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - app-network



  postgres_airf:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - airflow-db:/var/lib/postgresql/data
    networks:
      - app-network

  webserver:
    image: apache/airflow:2.5.1
    depends_on:
      - postgres_airf
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres_airf/airflow
      AIRFLOW__CORE__FERNET_KEY: 'FLCvhQP9IQWtMCg6Af1ugEUOjQ5qSy0Q4yhEu1IEZ98='
      AIRFLOW__CORE__LOAD_EXAMPLES: 'False'
      AIRFLOW__WEBSERVER__WORKERS: 1
      AIRFLOW__WEBSERVER__AUTH_BACKEND: "airflow.contrib.auth.backends.password_auth"
      PYTHONPATH: "/opt/airflow/dags/"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "8080:8080"
    command: >
      bash -c "
      airflow db init &&
      airflow users create
      --username admin
      --firstname Admin
      --lastname User 
      --role Admin
      --email admin@example.com
      --password admin &&
      airflow webserver"
    networks:
      - app-network

  scheduler:
    image: apache/airflow:2.5.1
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres_airf/airflow
      AIRFLOW__CORE__FERNET_KEY: 'FLCvhQP9IQWtMCg6Af1ugEUOjQ5qSy0Q4yhEu1IEZ98='
      AIRFLOW__CORE__DAGS_FOLDER: /opt/airflow/dags
      PYTHONPATH: "/opt/airflow/dags/"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - /var/run/docker.sock:/var/run/docker.sock
    command: scheduler
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db:
    driver: local
  airflow-db:
    driver: local
